{
  "version": 3,
  "file": "ng2-dnd.js",
  "sources": [
    "ng://ng2-dnd/src/dnd.module.ts",
    "ng://ng2-dnd/src/droppable.component.ts",
    "ng://ng2-dnd/src/draggable.component.ts",
    "ng://ng2-dnd/src/dnd.service.ts",
    "ng://ng2-dnd/src/sortable.component.ts",
    "ng://ng2-dnd/src/abstract.component.ts",
    "ng://ng2-dnd/src/dnd.config.ts",
    "ng://ng2-dnd/src/dnd.utils.ts"
  ],
  "sourcesContent": [
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\n\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropSortableService, dragDropServiceFactory, dragDropSortableServiceFactory} from './dnd.service';\nimport {DraggableComponent, DraggableHandleComponent} from './draggable.component';\nimport {DroppableComponent} from './droppable.component';\nimport {SortableContainer, SortableComponent, SortableHandleComponent} from './sortable.component';\n\nexport * from './abstract.component';\nexport * from './dnd.config';\nexport * from './dnd.service';\nexport * from './draggable.component';\nexport * from './droppable.component';\nexport * from './sortable.component';\n\nexport let providers = [\n    DragDropConfig,\n    { provide: DragDropService, useFactory: dragDropServiceFactory },\n    { provide: DragDropSortableService, useFactory: dragDropSortableServiceFactory, deps: [DragDropConfig] }\n];\n\n@NgModule({\n  declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n  exports : [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n\n})\nexport class DndModule {\n  static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: DndModule,\n            providers: providers\n        };\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {AbstractComponent} from './abstract.component';\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropData} from './dnd.service';\n\n@Directive({ selector: '[dnd-droppable]' })\nexport class DroppableComponent extends AbstractComponent {\n\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\n        this.dropEnabled = !!value;\n    }\n\n    /**\n     * Callback function called when the drop action completes correctly.\n     * It is activated before the on-drag-success callback.\n     */\n    @Output() onDropSuccess: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragEnter: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragOver: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragLeave: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n\n    @Input(\"allowDrop\") set allowdrop(value: (dropData: any) => boolean) {\n        this.allowDrop = value;\n    }\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, cdr);\n\n        this.dropEnabled = true;\n    }\n\n    _onDragEnterCallback(event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragEnterClass);\n            this.onDragEnter.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    }\n\n    _onDragOverCallback (event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragOverClass);\n            this.onDragOver.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    };\n\n    _onDragLeaveCallback (event: MouseEvent) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n            this.onDragLeave.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n        }\n    };\n\n    _onDropCallback (event: MouseEvent) {\n        let dataTransfer = (event as any).dataTransfer;\n        if (this._dragDropService.isDragged || (dataTransfer && dataTransfer.files)) {\n            this.onDropSuccess.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n            if (this._dragDropService.onDragSuccessCallback) {\n                this._dragDropService.onDragSuccessCallback.emit({dragData: this._dragDropService.dragData, mouseEvent: event});\n            }\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n        }\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\n\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\nimport {DragDropConfig, DragImage} from './dnd.config';\nimport {DragDropService, DragDropData} from './dnd.service';\n\n@Directive({ selector: '[dnd-draggable]' })\nexport class DraggableComponent extends AbstractComponent {\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    /**\n     * Callback function called when the drag actions happened.\n     */\n    @Output() onDragStart: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n    @Output() onDragEnd: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\n\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    @Input() dragData: any;\n\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    @Input() dragImage: string | DragImage | Function;\n\n    \n    @Input() cloneItem: boolean;\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, cdr);\n        this._defaultCursor = this._elem.style.cursor;\n        this.dragEnabled = true;\n    }\n\n    _onDragStartCallback(event: MouseEvent) {\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        this._elem.classList.add(this._config.onDragStartClass);\n        //\n        this.onDragStart.emit({dragData: this.dragData, mouseEvent: event});\n    }\n\n    _onDragEndCallback(event: MouseEvent) {\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        this._elem.classList.remove(this._config.onDragStartClass);\n        //\n        this.onDragEnd.emit({dragData: this.dragData, mouseEvent: event});\n    }\n}\n\n\n@Directive({ selector: '[dnd-draggable-handle]' })\nexport class DraggableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: DraggableComponent,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {Injectable, EventEmitter} from '@angular/core';\n\nimport {DragDropConfig} from './dnd.config';\nimport {isPresent} from './dnd.utils';\nimport {SortableContainer} from './sortable.component';\n\nexport class DragDropData {\n    dragData: any;\n    mouseEvent: MouseEvent;\n}\n\nexport function dragDropServiceFactory(): DragDropService  {\n    return new DragDropService();\n}\n\n@Injectable()\nexport class DragDropService {\n    allowedDropZones: Array<string> = [];\n    onDragSuccessCallback: EventEmitter<DragDropData>;\n    dragData: any;\n    firstDragData: any;\n    isDragged: boolean;\n}\n\nexport function dragDropSortableServiceFactory(config: DragDropConfig): DragDropSortableService  {\n    return new DragDropSortableService(config);\n}\n\n@Injectable()\nexport class DragDropSortableService {\n    index: number;\n    sortableContainer: SortableContainer;\n    isDragged: boolean;\n\n    private _elem: HTMLElement;\n    public get elem(): HTMLElement {\n        return this._elem;\n    }\n\n    constructor(private _config:DragDropConfig) {}\n\n    markSortable(elem: HTMLElement) {\n        if (isPresent(this._elem)) {\n            this._elem.classList.remove(this._config.onSortableDragClass);\n        }\n        if (isPresent(elem)) {\n            this._elem = elem;\n            this._elem.classList.add(this._config.onSortableDragClass);\n        }\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Directive, Input, Output, EventEmitter, ElementRef} from '@angular/core';\nimport {FormArray} from '@angular/forms';\n\nimport {AbstractComponent, AbstractHandleComponent} from './abstract.component';\nimport {DragDropConfig} from './dnd.config';\nimport {DragDropService, DragDropSortableService} from './dnd.service';\n\n@Directive({ selector: '[dnd-sortable-container]' })\nexport class SortableContainer extends AbstractComponent {\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    private _sortableData: Array<any>|FormArray = [];\n    private sortableHandler: SortableFormArrayHandler|SortableArrayHandler;\n\n    @Input() set sortableData(sortableData: Array<any>|FormArray) {\n        this._sortableData = sortableData;\n        if (sortableData instanceof FormArray) {\n            this.sortableHandler = new SortableFormArrayHandler();\n        } else {\n            this.sortableHandler = new SortableArrayHandler();\n        }\n        //\n        this.dropEnabled = !!this._sortableData;\n        // console.log(\"collection is changed, drop enabled: \" + this.dropEnabled);\n    }\n    get sortableData(): Array<any>|FormArray {\n        return this._sortableData;\n    }\n\n    @Input(\"dropZones\") set dropzones(value:Array<string>) {\n        this.dropZones = value;\n    }\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, cdr:ChangeDetectorRef,\n        private _sortableDataService: DragDropSortableService) {\n\n        super(elemRef, dragDropService, config, cdr);\n        this.dragEnabled = false;\n    }\n\n    _onDragEnterCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n            // Check does element exist in sortableData of this Container\n            if (this.indexOf(item) === -1) {\n                // Let's add it\n                // console.log('Container._onDragEnterCallback. drag node [' + this._sortableDataService.index.toString() + '] over parent node');\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer._sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this.insertItemAt(item, 0);\n                this._sortableDataService.sortableContainer = this;\n                this._sortableDataService.index = 0;\n            }\n            // Refresh changes in properties of container component\n            this.detectChanges();\n        }\n    }\n\n    getItemAt(index: number): any {\n        return this.sortableHandler.getItemAt(this._sortableData, index);\n    }\n\n    indexOf(item: any): number {\n        return this.sortableHandler.indexOf(this._sortableData, item);\n    }\n\n    removeItemAt(index: number): void {\n        this.sortableHandler.removeItemAt(this._sortableData, index);\n    }\n\n    insertItemAt(item: any, index: number) {\n        this.sortableHandler.insertItemAt(this._sortableData, item, index);\n    }\n}\n\nclass SortableArrayHandler {\n    getItemAt(sortableData: any, index: number): any {\n        return sortableData[index];\n    }\n\n    indexOf(sortableData: any, item: any): number {\n        return sortableData.indexOf(item);\n    }\n\n    removeItemAt(sortableData: any, index: number) {\n        sortableData.splice(index, 1);\n    }\n\n    insertItemAt(sortableData: any, item: any, index: number) {\n        sortableData.splice(index, 0, item);\n    }\n}\n\nclass SortableFormArrayHandler {\n    getItemAt(sortableData: any, index: number): any {\n        return sortableData.at(index);\n    }\n\n    indexOf(sortableData: any, item: any): number {\n        return sortableData.controls.indexOf(item);\n    }\n\n    removeItemAt(sortableData: any, index: number) {\n        sortableData.removeAt(index);\n    }\n\n    insertItemAt(sortableData: any, item: any, index: number) {\n        sortableData.insert(index, item);\n    }\n}\n\n@Directive({ selector: '[dnd-sortable]' })\nexport class SortableComponent extends AbstractComponent {\n\n    @Input('sortableIndex') index: number;\n\n    @Input(\"dragEnabled\") set draggable(value:boolean) {\n        this.dragEnabled = !!value;\n    }\n\n    @Input(\"dropEnabled\") set droppable(value:boolean) {\n        this.dropEnabled = !!value;\n    }\n\n    /**\n     * The data that has to be dragged. It can be any JS object\n     */\n    @Input() dragData: any;\n\n    /**\n     * Drag allowed effect\n     */\n    @Input(\"effectAllowed\") set effectallowed(value: string) {\n        this.effectAllowed = value;\n    }\n\n    /**\n     * Drag effect cursor\n     */\n    @Input(\"effectCursor\") set effectcursor(value: string) {\n        this.effectCursor = value;\n    }\n\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    @Output(\"onDragSuccess\") onDragSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output(\"onDragStart\") onDragStartCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDragOver\") onDragOverCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDragEnd\") onDragEndCallback: EventEmitter<any> = new EventEmitter<any>();\n    @Output(\"onDropSuccess\") onDropSuccessCallback: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig,\n        private _sortableContainer: SortableContainer,\n        private _sortableDataService: DragDropSortableService,\n        cdr:ChangeDetectorRef) {\n        super(elemRef, dragDropService, config, cdr);\n        this.dropZones = this._sortableContainer.dropZones;\n        this.dragEnabled = true;\n        this.dropEnabled = true;\n    }\n\n    _onDragStartCallback(event: Event) {\n        // console.log('_onDragStartCallback. dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = true;\n        this._sortableDataService.sortableContainer = this._sortableContainer;\n        this._sortableDataService.index = this.index;\n        this._sortableDataService.markSortable(this._elem);\n        // Add dragData\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        //\n        this.onDragStartCallback.emit(this._dragDropService.dragData);\n    }\n\n    _onDragOverCallback(event: Event) {\n        if (this._sortableDataService.isDragged && this._elem !== this._sortableDataService.elem) {\n            // console.log('_onDragOverCallback. dragging elem with index ' + this.index);\n            this._sortableDataService.sortableContainer = this._sortableContainer;\n            this._sortableDataService.index = this.index;\n            this._sortableDataService.markSortable(this._elem);\n            this.onDragOverCallback.emit(this._dragDropService.dragData);\n        }\n    }\n\n    _onDragEndCallback(event: Event) {\n        // console.log('_onDragEndCallback. end dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = false;\n        this._sortableDataService.sortableContainer = null;\n        this._sortableDataService.index = null;\n        this._sortableDataService.markSortable(null);\n        // Add dragGata\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        //\n        this.onDragEndCallback.emit(this._dragDropService.dragData);\n    }\n\n    _onDragEnterCallback(event: Event) {\n        if (this._sortableDataService.isDragged) {\n            this._sortableDataService.markSortable(this._elem);\n            if ((this.index !== this._sortableDataService.index) ||\n                (this._sortableDataService.sortableContainer.sortableData !== this._sortableContainer.sortableData)) {\n                // console.log('Component._onDragEnterCallback. drag node [' + this.index + '] over node [' + this._sortableDataService.index + ']');\n                // Get item\n                let item:any = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer.sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this._sortableContainer.insertItemAt(item, this.index);\n                if (this._sortableContainer.dropEnabled) {\n                    this._sortableContainer.dropEnabled = false;\n                }\n                this._sortableDataService.sortableContainer = this._sortableContainer;\n                this._sortableDataService.index = this.index;\n                this.detectChanges();\n            }\n        }\n    }\n\n    _onDropCallback (event: Event) {\n        if (this._sortableDataService.isDragged) {\n            // console.log('onDropCallback.onDropSuccessCallback.dragData', this._dragDropService.dragData);\n            this.onDropSuccessCallback.emit(this._dragDropService.dragData);\n            if (this._dragDropService.onDragSuccessCallback) {\n                // console.log('onDropCallback.onDragSuccessCallback.dragData', this._dragDropService.dragData);\n                this._dragDropService.onDragSuccessCallback.emit(this._dragDropService.dragData);\n            }\n            // Refresh changes in properties of container component\n            this._sortableContainer.detectChanges();\n        }\n    }\n}\n\n@Directive({ selector: '[dnd-sortable-handle]' })\nexport class SortableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef: ElementRef, dragDropService: DragDropService, config:DragDropConfig, _Component: SortableComponent,\n        cdr:ChangeDetectorRef) {\n\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {Injectable, ChangeDetectorRef, ViewRef} from '@angular/core';\nimport {ElementRef} from '@angular/core';\n\nimport { DragDropConfig, DragImage } from './dnd.config';\nimport { DragDropService } from './dnd.service';\nimport { isString, isFunction, isPresent, createImage, callFun } from './dnd.utils';\n\n@Injectable()\nexport abstract class AbstractComponent {\n    _elem: HTMLElement;\n    _dragHandle: HTMLElement;\n    _dragHelper: HTMLElement;\n    _defaultCursor: string;\n\n    /**\n     * Last element that was mousedown'ed\n     */\n    _target: EventTarget;\n\n    /**\n     * Whether the object is draggable. Default is true.\n     */\n    private _dragEnabled: boolean = false;\n    set dragEnabled(enabled: boolean) {\n        this._dragEnabled = !!enabled;\n        this._elem.draggable = this._dragEnabled;\n    }\n    get dragEnabled(): boolean {\n        return this._dragEnabled;\n    }\n\n    /**\n     * Allows drop on this element\n     */\n    dropEnabled: boolean = false;\n    /**\n     * Drag effect\n     */\n    effectAllowed: string;\n    /**\n     * Drag cursor\n     */\n    effectCursor: string;\n\n    /**\n     * Restrict places where a draggable element can be dropped. Either one of\n     * these two mechanisms can be used:\n     *\n     * - dropZones: an array of strings that permits to specify the drop zones\n     *   associated with this component. By default, if the drop-zones attribute\n     *   is not specified, the droppable component accepts drop operations by\n     *   all the draggable components that do not specify the allowed-drop-zones\n     *\n     * - allowDrop: a boolean function for droppable components, that is checked\n     *   when an item is dragged. The function is passed the dragData of this\n     *   item.\n     *   - if it returns true, the item can be dropped in this component\n     *   - if it returns false, the item cannot be dropped here\n     */\n    allowDrop: (dropData: any) => boolean;\n    dropZones: string[] = [];\n\n    /**\n     * Here is the property dragImage you can use:\n     * - The string value as url to the image\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"/images/simpler.png\">\n     * ...\n     * - The DragImage value with Image and optional offset by x and y:\n     *   let myDragImage: DragImage = new DragImage(\"/images/simpler1.png\", 0, 0);\n     * ...\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"myDragImage\">\n     * ...\n     * - The custom function to return the value of dragImage programmatically:\n     *   <div class=\"panel panel-default\"\n     *        dnd-draggable [dragEnabled]=\"true\"\n     *        [dragImage]=\"getDragImage(someData)\">\n     * ...\n     *   getDragImage(value:any): string {\n     *     return value ? \"/images/simpler1.png\" : \"/images/simpler2.png\"\n     *   }\n     */\n    dragImage: string | DragImage | Function;\n\n    cloneItem: boolean = false;\n\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\n        private _cdr: ChangeDetectorRef) {\n\n        // Assign default cursor unless overridden\n        this._defaultCursor = _config.defaultCursor;\n        this._elem = elemRef.nativeElement;\n        this._elem.style.cursor = this._defaultCursor;  // set default cursor on our element\n        //\n        // DROP events\n        //\n        this._elem.ondragenter = (event: Event) => {\n            this._onDragEnter(event);\n        };\n        this._elem.ondragover = (event: DragEvent) => {\n            this._onDragOver(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.dropEffect = this._config.dropEffect.name;\n            }\n\n            return false;\n        };\n        this._elem.ondragleave = (event: Event) => {\n            this._onDragLeave(event);\n        };\n        this._elem.ondrop = (event: Event) => {\n            this._onDrop(event);\n        };\n        //\n        // Drag events\n        //\n      this._elem.addEventListener('mousedown', (event: MouseEvent) => {\n        this._target = event.target;\n      }, false);\n\n        this._elem.addEventListener('dragstart', (event: DragEvent) => {\n            if (this._dragHandle) {\n                if (!this._dragHandle.contains(<Element>this._target)) {\n                    event.preventDefault();\n                    return;\n                }\n            }\n            if (this._dragDropService.firstDragData) { // process only first element in hierarhy\n              return ;\n            }\n            this._onDragStart(event);\n            this._dragDropService.firstDragData = this._dragDropService.dragData;\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.setData('text', '');\n                // Change drag effect\n                event.dataTransfer.effectAllowed = this.effectAllowed || this._config.dragEffect.name;\n                // Change drag image\n                if (isPresent(this.dragImage)) {\n                    if (isString(this.dragImage)) {\n                        (<any>event.dataTransfer).setDragImage(createImage(<string>this.dragImage));\n                    } else if (isFunction(this.dragImage)) {\n                        (<any>event.dataTransfer).setDragImage(callFun(<Function>this.dragImage));\n                    } else {\n                        let img: DragImage = <DragImage>this.dragImage;\n                        (<any>event.dataTransfer).setDragImage(img.imageElement, img.x_offset, img.y_offset);\n                    }\n                } else if (isPresent(this._config.dragImage)) {\n                    let dragImage: DragImage = this._config.dragImage;\n                    (<any>event.dataTransfer).setDragImage(dragImage.imageElement, dragImage.x_offset, dragImage.y_offset);\n                } else if (this.cloneItem) {\n                    this._dragHelper = <HTMLElement>this._elem.cloneNode(true);\n                    this._dragHelper.classList.add('dnd-drag-item');\n                    this._dragHelper.style.position = \"absolute\";\n                    this._dragHelper.style.top = \"0px\";\n                    this._dragHelper.style.left = \"-1000px\";\n                    this._elem.parentElement.appendChild(this._dragHelper);\n                    (<any>event.dataTransfer).setDragImage(this._dragHelper, event.offsetX, event.offsetY);\n                }\n\n                // Change drag cursor\n                let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n\n                if (this._dragEnabled) {\n                    cursorelem.style.cursor = this.effectCursor ? this.effectCursor : this._config.dragCursor;\n                } else {\n                    cursorelem.style.cursor = this._defaultCursor;\n                }\n            }\n        });\n\n        this._elem.addEventListener('dragend', (event: Event) => {\n            if (this._elem.parentElement && this._dragHelper) {\n                this._elem.parentElement.removeChild(this._dragHelper);\n            }\n            this._onDragEnd(event);\n            // Restore style of dragged element\n            let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n            cursorelem.style.cursor = this._defaultCursor;\n            this._dragDropService.firstDragData = null;\n        });\n    }\n\n    public setDragHandle(elem: HTMLElement) {\n        this._dragHandle = elem;\n    }\n    /******* Change detection ******/\n\n    detectChanges () {\n        // Programmatically run change detection to fix issue in Safari\n        setTimeout(() => {\n            if ( this._cdr && !(this._cdr as ViewRef).destroyed ) {\n                this._cdr.detectChanges();\n            }\n        }, 250);\n    }\n\n    //****** Droppable *******//\n    private _onDragEnter(event: Event): void {\n        // console.log('ondragenter._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragEnterCallback(event);\n        }\n    }\n\n    private _onDragOver(event: Event) {\n        // // console.log('ondragover._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // The element is over the same source element - do nothing\n            if (event.preventDefault) {\n                // Necessary. Allows us to drop.\n                event.preventDefault();\n            }\n\n            this._onDragOverCallback(event);\n        }\n    }\n\n    private _onDragLeave(event: Event): void {\n        // console.log('ondragleave._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragLeaveCallback(event);\n        }\n    }\n\n    private _onDrop(event: Event): void {\n        // console.log('ondrop._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // Necessary. Allows us to drop.\n            this._preventAndStop(event);\n\n            this._onDropCallback(event);\n\n            this.detectChanges();\n        }\n    }\n\n    private _isDropAllowed(event: any): boolean {\n        if ((this._dragDropService.isDragged || (event.dataTransfer && event.dataTransfer.files)) && this.dropEnabled) {\n            // First, if `allowDrop` is set, call it to determine whether the\n            // dragged element can be dropped here.\n            if (this.allowDrop) {\n                return this.allowDrop(this._dragDropService.dragData);\n            }\n\n            // Otherwise, use dropZones if they are set.\n            if (this.dropZones.length === 0 && this._dragDropService.allowedDropZones.length === 0) {\n                return true;\n            }\n            for (let i: number = 0; i < this._dragDropService.allowedDropZones.length; i++) {\n                let dragZone: string = this._dragDropService.allowedDropZones[i];\n                if (this.dropZones.indexOf(dragZone) !== -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private _preventAndStop(event: Event): any {\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n    }\n\n    //*********** Draggable **********//\n\n    private _onDragStart(event: Event): void {\n        //console.log('ondragstart.dragEnabled', this._dragEnabled);\n        if (this._dragEnabled) {\n            this._dragDropService.allowedDropZones = this.dropZones;\n            // console.log('ondragstart.allowedDropZones', this._dragDropService.allowedDropZones);\n            this._onDragStartCallback(event);\n            if (event.stopPropagation) {\n                event.stopPropagation();\n            }\n        }\n    }\n\n    private _onDragEnd(event: Event): void {\n        this._dragDropService.allowedDropZones = [];\n        // console.log('ondragend.allowedDropZones', this._dragDropService.allowedDropZones);\n        this._onDragEndCallback(event);\n    }\n\n    //**** Drop Callbacks ****//\n    _onDragEnterCallback(event: Event) { }\n    _onDragOverCallback(event: Event) { }\n    _onDragLeaveCallback(event: Event) { }\n    _onDropCallback(event: Event) { }\n\n    //**** Drag Callbacks ****//\n    _onDragStartCallback(event: Event) { }\n    _onDragEndCallback(event: Event) { }\n}\n\nexport class AbstractHandleComponent {\n    _elem: HTMLElement;\n    constructor(elemRef: ElementRef, public _dragDropService: DragDropService, public _config: DragDropConfig,\n        private _Component: AbstractComponent, private _cdr: ChangeDetectorRef) {\n        this._elem = elemRef.nativeElement;\n        this._Component.setDragHandle(this._elem);\n    }\n}\n",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\nimport {isString} from './dnd.utils';\n\nexport class DataTransferEffect {\n\n    static COPY = new DataTransferEffect('copy');\n    static LINK = new DataTransferEffect('link');\n    static MOVE = new DataTransferEffect('move');\n    static NONE = new DataTransferEffect('none');\n\n    constructor(public name: string) { }\n}\n\nexport class DragImage {\n    constructor(\n        public imageElement: any,\n        public x_offset: number = 0,\n        public y_offset: number = 0) {\n            if (isString(this.imageElement)) {\n                // Create real image from string source\n                let imgScr: string = <string>this.imageElement;\n                this.imageElement = new HTMLImageElement();\n                (<HTMLImageElement>this.imageElement).src = imgScr;\n            }\n        }\n}\n\nexport class DragDropConfig {\n    public onDragStartClass: string = \"dnd-drag-start\";\n    public onDragEnterClass: string = \"dnd-drag-enter\";\n    public onDragOverClass: string = \"dnd-drag-over\";\n    public onSortableDragClass: string = \"dnd-sortable-drag\";\n\n    public dragEffect: DataTransferEffect = DataTransferEffect.MOVE;\n    public dropEffect: DataTransferEffect = DataTransferEffect.MOVE;\n    public dragCursor: string = \"move\";\n    public dragImage: DragImage;\n    public defaultCursor: string = \"pointer\";\n}",
    "// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\n/**\n * Check and return true if an object is type of string\n */\nexport function isString(obj:any) {\n    return typeof obj === \"string\";\n}\n\n/**\n * Check and return true if an object not undefined or null\n */\nexport function isPresent(obj: any) {\n    return obj !== undefined && obj !== null;\n}\n\n/**\n * Check and return true if an object is type of Function\n */\nexport function isFunction(obj: any) {\n    return typeof obj === \"function\";\n}\n\n/**\n * Create Image element with specified url string\n */\nexport function createImage(src: string) {\n    let img:HTMLImageElement = new HTMLImageElement();\n    img.src = src;\n    return img;\n}\n\n/**\n * Call the function\n */\nexport function callFun(fun: Function) {\n    return fun();\n}"
  ],
  "names": [],
  "mappings": "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"
}
